// <auto-generated />
using System;
using EFGetStarted;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFGetStarted.Migrations
{
    [DbContext(typeof(ContextoHospital))]
    [Migration("20200501204234_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("EFGetStarted.Entidades.Caso", b =>
                {
                    b.Property<int>("CasoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("estado")
                        .HasColumnType("TEXT");

                    b.Property<int>("medicomatricula")
                        .HasColumnType("INTEGER");

                    b.Property<int>("pacientedni")
                        .HasColumnType("INTEGER");

                    b.HasKey("CasoId");

                    b.HasIndex("medicomatricula");

                    b.HasIndex("pacientedni");

                    b.ToTable("Casos");
                });

            modelBuilder.Entity("EFGetStarted.Entidades.Consulta", b =>
                {
                    b.Property<int>("ConsultaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("descripcionSintomas")
                        .HasColumnType("TEXT");

                    b.Property<string>("diagnostico")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("medicomatricula")
                        .HasColumnType("INTEGER");

                    b.Property<int>("pacientedni")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConsultaId");

                    b.HasIndex("medicomatricula");

                    b.HasIndex("pacientedni");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("EFGetStarted.Entidades.Medico", b =>
                {
                    b.Property<int>("matricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("apellido")
                        .HasColumnType("TEXT");

                    b.Property<string>("nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("matricula");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("EFGetStarted.Entidades.Paciente", b =>
                {
                    b.Property<int>("dni")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("fechaNac")
                        .HasColumnType("TEXT");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("dni");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("EFGetStarted.Entidades.Prueba", b =>
                {
                    b.Property<int>("PruebaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CasoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("fechaResultado")
                        .HasColumnType("TEXT");

                    b.Property<bool>("resultado")
                        .HasColumnType("INTEGER");

                    b.HasKey("PruebaId");

                    b.HasIndex("CasoId");

                    b.ToTable("Pruebas");
                });

            modelBuilder.Entity("EFGetStarted.Entidades.Caso", b =>
                {
                    b.HasOne("EFGetStarted.Entidades.Medico", "medico")
                        .WithMany("casos")
                        .HasForeignKey("medicomatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFGetStarted.Entidades.Paciente", "paciente")
                        .WithMany()
                        .HasForeignKey("pacientedni")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFGetStarted.Entidades.Consulta", b =>
                {
                    b.HasOne("EFGetStarted.Entidades.Medico", "medico")
                        .WithMany("consultas")
                        .HasForeignKey("medicomatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFGetStarted.Entidades.Paciente", "paciente")
                        .WithMany("consultas")
                        .HasForeignKey("pacientedni")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFGetStarted.Entidades.Prueba", b =>
                {
                    b.HasOne("EFGetStarted.Entidades.Caso", "caso")
                        .WithMany()
                        .HasForeignKey("CasoId");
                });
#pragma warning restore 612, 618
        }
    }
}
